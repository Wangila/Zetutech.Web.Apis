// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zetutech.Web.Api.Infrastructure.Data;

namespace Zetutech.Web.Api.Infrastructure.Migrations
{
    [DbContext(typeof(ZetutechDataDbContext))]
    partial class ZetutechDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Zetutech.Web.Api.ApplicationCore.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Title")
                        .HasColumnName("TITLE");

                    b.HasKey("Id");

                    b.ToTable("QUESTIONS");
                });

            modelBuilder.Entity("Zetutech.Web.Api.ApplicationCore.Entities.QuestionOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsCorrect")
                        .HasColumnName("IS_CORRECT");

                    b.Property<int>("QuestionId")
                        .HasColumnName("QUESITON_ID");

                    b.Property<string>("Title")
                        .HasColumnName("TITLE");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QUESTIONOPTIONS");
                });

            modelBuilder.Entity("Zetutech.Web.Api.ApplicationCore.Entities.QuestionOption", b =>
                {
                    b.HasOne("Zetutech.Web.Api.ApplicationCore.Entities.Question")
                        .WithMany("QuestionOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
